// Generated by CoffeeScript 1.6.3
var defer,
  __slice = [].slice;

defer = require('when').defer;

module.exports = function() {
  var args, fn, opts;
  args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
  opts = args[0];
  fn = args.slice(-1)[0];
  if (typeof fn !== 'function') {
    throw new Error('expected function as last arg');
  }
  return function() {
    var arg, deferral, defers, newArgs, _i, _len;
    if (typeof opts["if"] === 'function') {
      defers = opts["if"]();
    }
    if (defers) {
      deferral = defer();
      newArgs = [deferral.resolve];
      for (_i = 0, _len = arguments.length; _i < _len; _i++) {
        arg = arguments[_i];
        newArgs.push(arg);
      }
      fn.apply(this, newArgs);
      return deferral.promise;
    }
    return fn.apply(this, arguments);
  };
};
