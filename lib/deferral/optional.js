// Generated by CoffeeScript 1.6.3
var argsOf, defer;

defer = require('when').defer;

argsOf = require('../util').argsOf;

module.exports = function(opts, fn) {
  opts || (opts = {});
  fn || (fn = opts);
  if (typeof fn !== 'function') {
    throw new Error('expected function as last arg');
  }
  return function() {
    var arg, deferral, newArgs, resolverPosition, _i, _len;
    deferral = defer();
    if (opts.resolver != null) {
      resolverPosition = argsOf(fn).indexOf(opts.resolver);
      if (resolverPosition >= 0) {
        newArgs = [];
        for (_i = 0, _len = arguments.length; _i < _len; _i++) {
          arg = arguments[_i];
          newArgs.push(arg);
        }
        deferral.resolve.notify = deferral.notify;
        deferral.resolve.reject = deferral.reject;
        newArgs[resolverPosition] = deferral.resolve;
        fn.apply(this, newArgs);
      } else {
        fn.apply(this, arguments);
        deferral.resolve();
      }
      return deferral.promise;
    }
    fn.apply(this, arguments);
    deferral.resolve();
    return deferral.promise;
  };
};
