// Generated by CoffeeScript 1.6.3
var argsOf, defer;

defer = require('when').defer;

argsOf = require('../util').argsOf;

module.exports = function(Preparator, decoratedFn) {
  var argPosition;
  Preparator || (Preparator = {});
  decoratedFn || (decoratedFn = Preparator);
  if (typeof decoratedFn !== 'function') {
    throw new Error('expected function as last arg');
  }
  if (Preparator.resolver != null) {
    argPosition = argsOf(decoratedFn).indexOf(Preparator.resolver);
  }
  return function() {
    var arg, deferral, newArgs, resolver, _i, _len;
    deferral = defer();
    Preparator.context = typeof Preparator.context === 'undefined' ? this : Preparator.context;
    if (Preparator.resolver != null) {
      if (argPosition >= 0) {
        resolver = deferral.resolve;
        resolver.resolve = resolver;
        resolver.reject = deferral.reject;
        resolver.notify = deferral.notify;
        newArgs = [];
        for (_i = 0, _len = arguments.length; _i < _len; _i++) {
          arg = arguments[_i];
          newArgs.push(arg);
        }
        newArgs[argPosition] = resolver;
        decoratedFn.apply(Preparator.context, newArgs);
      } else {
        decoratedFn.apply(Preparator.context, arguments);
        deferral.resolve();
      }
      return deferral.promise;
    }
    decoratedFn.apply(Preparator.context, arguments);
    deferral.resolve();
    return deferral.promise;
  };
};
