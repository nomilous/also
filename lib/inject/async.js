// Generated by CoffeeScript 1.4.0
var Defer, argsOf;

argsOf = require('../util').argsOf;

Defer = require('when').defer;

module.exports = function(Preparator, decoratedFn) {
  if (typeof Preparator !== 'object' || Preparator instanceof Array) {
    throw new Error('also.inject.async(Preparator, decoratedFn) requires Preparator as object');
  }
  return (function(context, configured) {
    var beforeAll;
    context.signature = argsOf(decoratedFn);
    context.first = [];
    context.last = [];
    beforeAll = Defer();
    if (Preparator.beforeAll != null) {
      Preparator.beforeAll(beforeAll.resolve);
    }
    return function() {
      var arg, success, _i, _len;
      context.inject = [];
      if (Preparator.beforeEach != null) {
        Preparator.beforeEach(context);
      }
      for (_i = 0, _len = arguments.length; _i < _len; _i++) {
        arg = arguments[_i];
        context.inject.push(arg);
      }
      return beforeAll.promise.then(success = function() {
        var result;
        result = decoratedFn.apply(null, context.first.concat(context.inject).concat(context.last));
        if (Preparator.afterEach != null) {
          Preparator.afterEach(context, result);
        }
        return result;
      });
    };
  })(function() {}, false);
};
