// Generated by CoffeeScript 1.4.0
var argsOf;

argsOf = require('./util').argsOf;

exports.sync = function(signatureFn, fn) {
  return function() {
    var arg, config, injected, _i, _len;
    injected = typeof signatureFn === 'function' ? signatureFn(argsOf(fn)) : typeof signatureFn === 'object' ? (config = signatureFn, []) : [signatureFn];
    for (_i = 0, _len = arguments.length; _i < _len; _i++) {
      arg = arguments[_i];
      injected.push(arg);
    }
    return fn.apply(null, injected);
  };
};

exports.async = function(signatureFn, fn) {
  return function() {
    var arg, config, original;
    original = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = arguments.length; _i < _len; _i++) {
        arg = arguments[_i];
        _results.push(arg);
      }
      return _results;
    }).apply(this, arguments);
    if (typeof signatureFn === 'function') {
      return signatureFn(argsOf(fn).slice(1), function(error, result) {
        return fn.apply(null, [error].concat(result).concat(original));
      });
    } else if (typeof signatureFn === 'object') {
      config = signatureFn;
      return fn.apply(null, []);
    } else {
      return fn.apply(null, [signatureFn].concat(original));
    }
  };
};
